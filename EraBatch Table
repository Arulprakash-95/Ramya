use PP_Athena_ODS

select * from PP_Athena_Landing..SSISConfig where IsLoadedToLanding=0
and SourceTable='ERABATCH'
---athena ods 
select max(ERABATCHID) from ATHENAONE.ERABATCH with(nolock)

---landing  121 --No.of updatable records   
select * from PP_Athena_Landing.ATHENAONE.ERABATCH with(nolock)
where ERABATCHID <='225744'   --106

--176 inserts --No.of new insertable records 
select * from PP_Athena_Landing.ATHENAONE.ERABATCH with(nolock)
where ERABATCHID >'225744'   --119

select count(1) from PP_Athena_Landing.ATHENAONE.ERABATCH with(nolock)--297 --225

--drop back up table 
drop table ERABATCH_Temp_Backup

--104 updatable records  
select 
count(d.CONTEXTID)
from ATHENAONE.ERABATCH d with(nolock)
join PP_Athena_Landing.ATHENAONE.ERABATCH dl with(nolock)
on --d.CONTEXTID=dl.CONTEXTID and 
d.ERABATCHID=dl.ERABATCHID

--89 records --taking back up of existing updatable records  
select d.* into ERABATCH_Temp_Backup
from ATHENAONE.ERABATCH d with(nolock)
join PP_Athena_Landing.ATHENAONE.ERABATCH dl with(nolock)
on d.CONTEXTID=dl.CONTEXTID and d.ERABATCHID=dl.ERABATCHID

--check the inserted data
select * from ERABATCH_Temp_Backup


---check for duplicates in main table 
select ERABATCHID,count(1)
from 
ATHENAONE.ERABATCH with(nolock)
group by ERABATCHID
having count(1)> 1


----INsert all landing data to ODS 
Insert into ATHENAONE.ERABATCH
(CONTEXTID,CONTEXTNAME,CONTEXTPARENTCONTEXTID,ASSIGNEDTO,STATUS,CREATEDDATETIME,CREATEDBY,DELETEDBY,DELETEDDATETIME,LASTUPDATED,ERABATCHID,TOTALADJUSTMENTS,TOTALTRANSFERS,BANKSTATEMENTACCOUNTID,BANKROUTINGNUMBER,TOTALCOPAYS,SUBTOTALCHARGES,AUTOPAYMENTBATCHDATETIME,SUBTOTALTRANSFERS,ANSIVERSIONID,PAYORNAME,PAYORWEBSITE,PAYEEDELIVERYBYEMAIL,RECEIVERNUMBER,PAYEETAXIDNUMBER,PAYORTECHCONTACTNAME,PAYEEZIP,DUALPOSTCLONECONTEXTID,PAYORBATCHNUMBER,SUBTOTALADJUSTMENTS,BYTELENGTH,PAYORTECHFAX,PAYMENTBATCHROUTEID,ASSIGNEDDATETIME,RPOERAFILEID,NOTES,ESCALATIONLEVEL,PAYEEDELIVERYBYFTP,PAYEEADDRESS,PAYORIDNUMBER,EMCRECEIVERID,PAYDATEDATETIME,PAYEEDELIVERYBYMAILNAME,PAYEEDELIVERYBYONLINE,SOURCETRAILERDATA,POSTEDBY,SHAREDTINYN,PAYORCOUNTRYCODE,PAYEECOUNTRYCODE,TOTALPAYMENTS,IMAGEFILENAME,KICKREASONCATEGORYID,PAYORTECHURL,PAYORTECHEXTN,TOTALCHARGES,SOURCEHEADERDATA,AEGISKICKREASONCATEGORYID,PAYORTECHEMAIL,POSTEDDATETIME,AEGISINSREPORTINGCATEGORYID,PAYEESTATE,PAYEECITY,LOCALIDNUMBER,UNIQUESTRING,PAYORTECHPHONE,BANKACCOUNTNUMBER,PROVIDERNUMBER,TARGETPAYMENTBATCHID,PAYMENTMETHOD,CHECKNUMBER,BYTEOFFSET,SUBTOTALPAYMENTS,ADDITIONALPAYEEIDNUMBER,FEDERALIDNUMBER,
DUALPOSTCLONEERABATCHID,LASTMODIFIEDDATETIME,LASTMODIFIEDBY,Record_Created_Date,Record_Updated_Date)


select 
dl.CONTEXTID,CONTEXTNAME,CONTEXTPARENTCONTEXTID,ASSIGNEDTO,STATUS,CREATEDDATETIME,CREATEDBY,DELETEDBY,DELETEDDATETIME,LASTUPDATED,dl.ERABATCHID,TOTALADJUSTMENTS,TOTALTRANSFERS,BANKSTATEMENTACCOUNTID,BANKROUTINGNUMBER,TOTALCOPAYS,SUBTOTALCHARGES,AUTOPAYMENTBATCHDATETIME,SUBTOTALTRANSFERS,ANSIVERSIONID,PAYORNAME,PAYORWEBSITE,PAYEEDELIVERYBYEMAIL,RECEIVERNUMBER,PAYEETAXIDNUMBER,PAYORTECHCONTACTNAME,PAYEEZIP,DUALPOSTCLONECONTEXTID,PAYORBATCHNUMBER,SUBTOTALADJUSTMENTS,BYTELENGTH,PAYORTECHFAX,PAYMENTBATCHROUTEID,ASSIGNEDDATETIME,RPOERAFILEID,NOTES,ESCALATIONLEVEL,PAYEEDELIVERYBYFTP,PAYEEADDRESS,PAYORIDNUMBER,EMCRECEIVERID,PAYDATEDATETIME,PAYEEDELIVERYBYMAILNAME,PAYEEDELIVERYBYONLINE,SOURCETRAILERDATA,POSTEDBY,SHAREDTINYN,PAYORCOUNTRYCODE,PAYEECOUNTRYCODE,TOTALPAYMENTS,IMAGEFILENAME,KICKREASONCATEGORYID,PAYORTECHURL,PAYORTECHEXTN,TOTALCHARGES,SOURCEHEADERDATA,AEGISKICKREASONCATEGORYID,PAYORTECHEMAIL,POSTEDDATETIME,AEGISINSREPORTINGCATEGORYID,PAYEESTATE,PAYEECITY,LOCALIDNUMBER,UNIQUESTRING,PAYORTECHPHONE,BANKACCOUNTNUMBER,PROVIDERNUMBER,TARGETPAYMENTBATCHID,PAYMENTMETHOD,CHECKNUMBER,BYTEOFFSET,SUBTOTALPAYMENTS,ADDITIONALPAYEEIDNUMBER,FEDERALIDNUMBER,
DUALPOSTCLONEERABATCHID,LASTMODIFIEDDATETIME,LASTMODIFIEDBY,dl.Record_Created_Date ,
dl.Record_Created_Date as Record_Updated_Date
from PP_Athena_Landing.ATHENAONE.ERABATCH dl with(nolock)

--select 
--dl.CONTEXTID,CONTEXTNAME,CONTEXTPARENTCONTEXTID,ASSIGNEDTO,STATUS,CREATEDDATETIME,CREATEDBY,DELETEDBY,DELETEDDATETIME,LASTUPDATED,dl.ERABATCHID,TOTALADJUSTMENTS,TOTALTRANSFERS,BANKSTATEMENTACCOUNTID,BANKROUTINGNUMBER,TOTALCOPAYS,SUBTOTALCHARGES,AUTOPAYMENTBATCHDATETIME,SUBTOTALTRANSFERS,ANSIVERSIONID,PAYORNAME,PAYORWEBSITE,PAYEEDELIVERYBYEMAIL,RECEIVERNUMBER,PAYEETAXIDNUMBER,PAYORTECHCONTACTNAME,PAYEEZIP,DUALPOSTCLONECONTEXTID,PAYORBATCHNUMBER,SUBTOTALADJUSTMENTS,BYTELENGTH,PAYORTECHFAX,PAYMENTBATCHROUTEID,ASSIGNEDDATETIME,RPOERAFILEID,NOTES,ESCALATIONLEVEL,PAYEEDELIVERYBYFTP,PAYEEADDRESS,PAYORIDNUMBER,EMCRECEIVERID,PAYDATEDATETIME,PAYEEDELIVERYBYMAILNAME,PAYEEDELIVERYBYONLINE,SOURCETRAILERDATA,POSTEDBY,SHAREDTINYN,PAYORCOUNTRYCODE,PAYEECOUNTRYCODE,TOTALPAYMENTS,IMAGEFILENAME,KICKREASONCATEGORYID,PAYORTECHURL,PAYORTECHEXTN,TOTALCHARGES,SOURCEHEADERDATA,AEGISKICKREASONCATEGORYID,PAYORTECHEMAIL,POSTEDDATETIME,AEGISINSREPORTINGCATEGORYID,PAYEESTATE,PAYEECITY,LOCALIDNUMBER,UNIQUESTRING,PAYORTECHPHONE,BANKACCOUNTNUMBER,PROVIDERNUMBER,TARGETPAYMENTBATCHID,PAYMENTMETHOD,CHECKNUMBER,BYTEOFFSET,SUBTOTALPAYMENTS,ADDITIONALPAYEEIDNUMBER,FEDERALIDNUMBER,
--DUALPOSTCLONEERABATCHID,LASTMODIFIEDDATETIME,LASTMODIFIEDBY,dl.Record_Created_Date ,
--dl.Record_Created_Date as Record_Updated_Date
--from PP_Athena_Landing.ATHENAONE.ERABATCH dl with(nolock)
--join 
--(
--select CONTEXTID,Record_Created_Date,ERABATCHID from 
--ERABATCH_Temp_Backup  with(nolock)
--) t
--on t.CONTEXTID=dl.CONTEXTID and t.ERABATCHID=dl.ERABATCHID
--and t.Record_Created_Date <> dl.Record_Created_Date


--check no. of  duplicates records in main table 
--104
select count(d.CONTEXTID)
from ATHENAONE.ERABATCH d with(nolock)
join ERABATCH_Temp_Backup dl with(nolock)
on d.CONTEXTID=dl.CONTEXTID and d.ERABATCHID=dl.ERABATCHID
and d.Record_Created_Date = dl.Record_Created_Date

--85 delete duplicates records in main table
delete d 
--select d.*
from ATHENAONE.ERABATCH d with(nolock)
join ERABATCH_Temp_Backup dl with(nolock)
on d.CONTEXTID=dl.CONTEXTID and d.ERABATCHID=dl.ERABATCHID
and d.Record_Created_Date = dl.Record_Created_Date

--0 check whether all duplicates are deleted 
select count(d.CONTEXTID)
from ATHENAONE.ERABATCH d with(nolock)
join ERABATCH_Temp_Backup dl with(nolock)
on d.CONTEXTID=dl.CONTEXTID and d.ERABATCHID=dl.ERABATCHID
and d.Record_Created_Date = dl.Record_Created_Date

--85 check whether all matchingids from landing with ods 
---check whether all updated records have latest info 
select count(d.CONTEXTID)
from ATHENAONE.ERABATCH d with(nolock)
join ERABATCH_Temp_Backup dl with(nolock)
on d.CONTEXTID=dl.CONTEXTID and d.ERABATCHID=dl.ERABATCHID
and d.Record_Created_Date <> dl.Record_Created_Date

---check whther all landing data inserted into ods
select count(d.CONTEXTID)
from ATHENAONE.ERABATCH d with(nolock)
join PP_Athena_Landing.ATHENAONE.ERABATCH dl with(nolock)
on  d.ERABATCHID=dl.ERABATCHID
and d.Record_Created_Date = dl.Record_Created_Date

select count(1) from 
 PP_Athena_Landing.ATHENAONE.ERABATCH dl with(nolock)



--update config so snowlake to landing processing occurs 
update s set IsLoadedToLanding=0
--select * 
from PP_Athena_Landing..SSISConfig  s 
where SourceTable='ERABATCH' and IsLoadedToLanding=1  
